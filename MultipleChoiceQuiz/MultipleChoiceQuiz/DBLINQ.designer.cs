#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MultipleChoiceQuiz
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuizDB")]
	public partial class DBLINQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertQUESTION(QUESTION instance);
    partial void UpdateQUESTION(QUESTION instance);
    partial void DeleteQUESTION(QUESTION instance);
    partial void InsertQUIZ(QUIZ instance);
    partial void UpdateQUIZ(QUIZ instance);
    partial void DeleteQUIZ(QUIZ instance);
    partial void InsertQUIZ_QUESTION(QUIZ_QUESTION instance);
    partial void UpdateQUIZ_QUESTION(QUIZ_QUESTION instance);
    partial void DeleteQUIZ_QUESTION(QUIZ_QUESTION instance);
    partial void InsertQUIZ_USER(QUIZ_USER instance);
    partial void UpdateQUIZ_USER(QUIZ_USER instance);
    partial void DeleteQUIZ_USER(QUIZ_USER instance);
    partial void InsertUSER(USER instance);
    partial void UpdateUSER(USER instance);
    partial void DeleteUSER(USER instance);
    #endregion
		
		public DBLINQDataContext() : 
				base(global::MultipleChoiceQuiz.Properties.Settings.Default.QuizDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBLINQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBLINQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBLINQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBLINQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<QUESTION> QUESTIONs
		{
			get
			{
				return this.GetTable<QUESTION>();
			}
		}
		
		public System.Data.Linq.Table<QUIZ> QUIZs
		{
			get
			{
				return this.GetTable<QUIZ>();
			}
		}
		
		public System.Data.Linq.Table<QUIZ_QUESTION> QUIZ_QUESTIONs
		{
			get
			{
				return this.GetTable<QUIZ_QUESTION>();
			}
		}
		
		public System.Data.Linq.Table<QUIZ_USER> QUIZ_USERs
		{
			get
			{
				return this.GetTable<QUIZ_USER>();
			}
		}
		
		public System.Data.Linq.Table<USER> USERs
		{
			get
			{
				return this.GetTable<USER>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUESTION")]
	public partial class QUESTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Q_ID;
		
		private string _Q_TEXT;
		
		private string _Q_A;
		
		private string _Q_B;
		
		private string _Q_C;
		
		private string _Q_D;
		
		private System.Nullable<int> _Q_ANSWER;
		
		private EntitySet<QUIZ_QUESTION> _QUIZ_QUESTIONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQ_IDChanging(int value);
    partial void OnQ_IDChanged();
    partial void OnQ_TEXTChanging(string value);
    partial void OnQ_TEXTChanged();
    partial void OnQ_AChanging(string value);
    partial void OnQ_AChanged();
    partial void OnQ_BChanging(string value);
    partial void OnQ_BChanged();
    partial void OnQ_CChanging(string value);
    partial void OnQ_CChanged();
    partial void OnQ_DChanging(string value);
    partial void OnQ_DChanged();
    partial void OnQ_ANSWERChanging(System.Nullable<int> value);
    partial void OnQ_ANSWERChanged();
    #endregion
		
		public QUESTION()
		{
			this._QUIZ_QUESTIONs = new EntitySet<QUIZ_QUESTION>(new Action<QUIZ_QUESTION>(this.attach_QUIZ_QUESTIONs), new Action<QUIZ_QUESTION>(this.detach_QUIZ_QUESTIONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Q_ID
		{
			get
			{
				return this._Q_ID;
			}
			set
			{
				if ((this._Q_ID != value))
				{
					this.OnQ_IDChanging(value);
					this.SendPropertyChanging();
					this._Q_ID = value;
					this.SendPropertyChanged("Q_ID");
					this.OnQ_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q_TEXT", DbType="NVarChar(400)")]
		public string Q_TEXT
		{
			get
			{
				return this._Q_TEXT;
			}
			set
			{
				if ((this._Q_TEXT != value))
				{
					this.OnQ_TEXTChanging(value);
					this.SendPropertyChanging();
					this._Q_TEXT = value;
					this.SendPropertyChanged("Q_TEXT");
					this.OnQ_TEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q_A", DbType="NVarChar(150)")]
		public string Q_A
		{
			get
			{
				return this._Q_A;
			}
			set
			{
				if ((this._Q_A != value))
				{
					this.OnQ_AChanging(value);
					this.SendPropertyChanging();
					this._Q_A = value;
					this.SendPropertyChanged("Q_A");
					this.OnQ_AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q_B", DbType="NVarChar(150)")]
		public string Q_B
		{
			get
			{
				return this._Q_B;
			}
			set
			{
				if ((this._Q_B != value))
				{
					this.OnQ_BChanging(value);
					this.SendPropertyChanging();
					this._Q_B = value;
					this.SendPropertyChanged("Q_B");
					this.OnQ_BChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q_C", DbType="NVarChar(150)")]
		public string Q_C
		{
			get
			{
				return this._Q_C;
			}
			set
			{
				if ((this._Q_C != value))
				{
					this.OnQ_CChanging(value);
					this.SendPropertyChanging();
					this._Q_C = value;
					this.SendPropertyChanged("Q_C");
					this.OnQ_CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q_D", DbType="NVarChar(150)")]
		public string Q_D
		{
			get
			{
				return this._Q_D;
			}
			set
			{
				if ((this._Q_D != value))
				{
					this.OnQ_DChanging(value);
					this.SendPropertyChanging();
					this._Q_D = value;
					this.SendPropertyChanged("Q_D");
					this.OnQ_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q_ANSWER", DbType="Int")]
		public System.Nullable<int> Q_ANSWER
		{
			get
			{
				return this._Q_ANSWER;
			}
			set
			{
				if ((this._Q_ANSWER != value))
				{
					this.OnQ_ANSWERChanging(value);
					this.SendPropertyChanging();
					this._Q_ANSWER = value;
					this.SendPropertyChanged("Q_ANSWER");
					this.OnQ_ANSWERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUESTION_QUIZ_QUESTION", Storage="_QUIZ_QUESTIONs", ThisKey="Q_ID", OtherKey="Q_ID")]
		public EntitySet<QUIZ_QUESTION> QUIZ_QUESTIONs
		{
			get
			{
				return this._QUIZ_QUESTIONs;
			}
			set
			{
				this._QUIZ_QUESTIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QUIZ_QUESTIONs(QUIZ_QUESTION entity)
		{
			this.SendPropertyChanging();
			entity.QUESTION = this;
		}
		
		private void detach_QUIZ_QUESTIONs(QUIZ_QUESTION entity)
		{
			this.SendPropertyChanging();
			entity.QUESTION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUIZ")]
	public partial class QUIZ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QZ_ID;
		
		private string _QZ_TITLE;
		
		private EntitySet<QUIZ_QUESTION> _QUIZ_QUESTIONs;
		
		private EntitySet<QUIZ_USER> _QUIZ_USERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQZ_IDChanging(int value);
    partial void OnQZ_IDChanged();
    partial void OnQZ_TITLEChanging(string value);
    partial void OnQZ_TITLEChanged();
    #endregion
		
		public QUIZ()
		{
			this._QUIZ_QUESTIONs = new EntitySet<QUIZ_QUESTION>(new Action<QUIZ_QUESTION>(this.attach_QUIZ_QUESTIONs), new Action<QUIZ_QUESTION>(this.detach_QUIZ_QUESTIONs));
			this._QUIZ_USERs = new EntitySet<QUIZ_USER>(new Action<QUIZ_USER>(this.attach_QUIZ_USERs), new Action<QUIZ_USER>(this.detach_QUIZ_USERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QZ_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QZ_ID
		{
			get
			{
				return this._QZ_ID;
			}
			set
			{
				if ((this._QZ_ID != value))
				{
					this.OnQZ_IDChanging(value);
					this.SendPropertyChanging();
					this._QZ_ID = value;
					this.SendPropertyChanged("QZ_ID");
					this.OnQZ_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QZ_TITLE", DbType="NVarChar(150)")]
		public string QZ_TITLE
		{
			get
			{
				return this._QZ_TITLE;
			}
			set
			{
				if ((this._QZ_TITLE != value))
				{
					this.OnQZ_TITLEChanging(value);
					this.SendPropertyChanging();
					this._QZ_TITLE = value;
					this.SendPropertyChanged("QZ_TITLE");
					this.OnQZ_TITLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUIZ_QUIZ_QUESTION", Storage="_QUIZ_QUESTIONs", ThisKey="QZ_ID", OtherKey="QZ_ID")]
		public EntitySet<QUIZ_QUESTION> QUIZ_QUESTIONs
		{
			get
			{
				return this._QUIZ_QUESTIONs;
			}
			set
			{
				this._QUIZ_QUESTIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUIZ_QUIZ_USER", Storage="_QUIZ_USERs", ThisKey="QZ_ID", OtherKey="QZ_ID")]
		public EntitySet<QUIZ_USER> QUIZ_USERs
		{
			get
			{
				return this._QUIZ_USERs;
			}
			set
			{
				this._QUIZ_USERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QUIZ_QUESTIONs(QUIZ_QUESTION entity)
		{
			this.SendPropertyChanging();
			entity.QUIZ = this;
		}
		
		private void detach_QUIZ_QUESTIONs(QUIZ_QUESTION entity)
		{
			this.SendPropertyChanging();
			entity.QUIZ = null;
		}
		
		private void attach_QUIZ_USERs(QUIZ_USER entity)
		{
			this.SendPropertyChanging();
			entity.QUIZ = this;
		}
		
		private void detach_QUIZ_USERs(QUIZ_USER entity)
		{
			this.SendPropertyChanging();
			entity.QUIZ = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUIZ_QUESTION")]
	public partial class QUIZ_QUESTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QQ_ID;
		
		private System.Nullable<int> _QZ_ID;
		
		private System.Nullable<int> _Q_ID;
		
		private EntityRef<QUESTION> _QUESTION;
		
		private EntityRef<QUIZ> _QUIZ;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQQ_IDChanging(int value);
    partial void OnQQ_IDChanged();
    partial void OnQZ_IDChanging(System.Nullable<int> value);
    partial void OnQZ_IDChanged();
    partial void OnQ_IDChanging(System.Nullable<int> value);
    partial void OnQ_IDChanged();
    #endregion
		
		public QUIZ_QUESTION()
		{
			this._QUESTION = default(EntityRef<QUESTION>);
			this._QUIZ = default(EntityRef<QUIZ>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QQ_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QQ_ID
		{
			get
			{
				return this._QQ_ID;
			}
			set
			{
				if ((this._QQ_ID != value))
				{
					this.OnQQ_IDChanging(value);
					this.SendPropertyChanging();
					this._QQ_ID = value;
					this.SendPropertyChanged("QQ_ID");
					this.OnQQ_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QZ_ID", DbType="Int")]
		public System.Nullable<int> QZ_ID
		{
			get
			{
				return this._QZ_ID;
			}
			set
			{
				if ((this._QZ_ID != value))
				{
					if (this._QUIZ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQZ_IDChanging(value);
					this.SendPropertyChanging();
					this._QZ_ID = value;
					this.SendPropertyChanged("QZ_ID");
					this.OnQZ_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q_ID", DbType="Int")]
		public System.Nullable<int> Q_ID
		{
			get
			{
				return this._Q_ID;
			}
			set
			{
				if ((this._Q_ID != value))
				{
					if (this._QUESTION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQ_IDChanging(value);
					this.SendPropertyChanging();
					this._Q_ID = value;
					this.SendPropertyChanged("Q_ID");
					this.OnQ_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUESTION_QUIZ_QUESTION", Storage="_QUESTION", ThisKey="Q_ID", OtherKey="Q_ID", IsForeignKey=true)]
		public QUESTION QUESTION
		{
			get
			{
				return this._QUESTION.Entity;
			}
			set
			{
				QUESTION previousValue = this._QUESTION.Entity;
				if (((previousValue != value) 
							|| (this._QUESTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUESTION.Entity = null;
						previousValue.QUIZ_QUESTIONs.Remove(this);
					}
					this._QUESTION.Entity = value;
					if ((value != null))
					{
						value.QUIZ_QUESTIONs.Add(this);
						this._Q_ID = value.Q_ID;
					}
					else
					{
						this._Q_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("QUESTION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUIZ_QUIZ_QUESTION", Storage="_QUIZ", ThisKey="QZ_ID", OtherKey="QZ_ID", IsForeignKey=true)]
		public QUIZ QUIZ
		{
			get
			{
				return this._QUIZ.Entity;
			}
			set
			{
				QUIZ previousValue = this._QUIZ.Entity;
				if (((previousValue != value) 
							|| (this._QUIZ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUIZ.Entity = null;
						previousValue.QUIZ_QUESTIONs.Remove(this);
					}
					this._QUIZ.Entity = value;
					if ((value != null))
					{
						value.QUIZ_QUESTIONs.Add(this);
						this._QZ_ID = value.QZ_ID;
					}
					else
					{
						this._QZ_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("QUIZ");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUIZ_USER")]
	public partial class QUIZ_USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QU_ID;
		
		private System.Nullable<int> _QZ_ID;
		
		private System.Nullable<int> _U_ID;
		
		private System.Nullable<int> _QU_CORRECT;
		
		private System.Nullable<int> _QU_WRONG;
		
		private System.Nullable<int> _QU_NOTSOLVED;
		
		private System.Nullable<int> _QU_SCORE;
		
		private System.Nullable<System.DateTime> _QU_DATE;
		
		private EntityRef<QUIZ> _QUIZ;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQU_IDChanging(int value);
    partial void OnQU_IDChanged();
    partial void OnQZ_IDChanging(System.Nullable<int> value);
    partial void OnQZ_IDChanged();
    partial void OnU_IDChanging(System.Nullable<int> value);
    partial void OnU_IDChanged();
    partial void OnQU_CORRECTChanging(System.Nullable<int> value);
    partial void OnQU_CORRECTChanged();
    partial void OnQU_WRONGChanging(System.Nullable<int> value);
    partial void OnQU_WRONGChanged();
    partial void OnQU_NOTSOLVEDChanging(System.Nullable<int> value);
    partial void OnQU_NOTSOLVEDChanged();
    partial void OnQU_SCOREChanging(System.Nullable<int> value);
    partial void OnQU_SCOREChanged();
    partial void OnQU_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnQU_DATEChanged();
    #endregion
		
		public QUIZ_USER()
		{
			this._QUIZ = default(EntityRef<QUIZ>);
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QU_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QU_ID
		{
			get
			{
				return this._QU_ID;
			}
			set
			{
				if ((this._QU_ID != value))
				{
					this.OnQU_IDChanging(value);
					this.SendPropertyChanging();
					this._QU_ID = value;
					this.SendPropertyChanged("QU_ID");
					this.OnQU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QZ_ID", DbType="Int")]
		public System.Nullable<int> QZ_ID
		{
			get
			{
				return this._QZ_ID;
			}
			set
			{
				if ((this._QZ_ID != value))
				{
					if (this._QUIZ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQZ_IDChanging(value);
					this.SendPropertyChanging();
					this._QZ_ID = value;
					this.SendPropertyChanged("QZ_ID");
					this.OnQZ_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_ID", DbType="Int")]
		public System.Nullable<int> U_ID
		{
			get
			{
				return this._U_ID;
			}
			set
			{
				if ((this._U_ID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnU_IDChanging(value);
					this.SendPropertyChanging();
					this._U_ID = value;
					this.SendPropertyChanged("U_ID");
					this.OnU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QU_CORRECT", DbType="Int")]
		public System.Nullable<int> QU_CORRECT
		{
			get
			{
				return this._QU_CORRECT;
			}
			set
			{
				if ((this._QU_CORRECT != value))
				{
					this.OnQU_CORRECTChanging(value);
					this.SendPropertyChanging();
					this._QU_CORRECT = value;
					this.SendPropertyChanged("QU_CORRECT");
					this.OnQU_CORRECTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QU_WRONG", DbType="Int")]
		public System.Nullable<int> QU_WRONG
		{
			get
			{
				return this._QU_WRONG;
			}
			set
			{
				if ((this._QU_WRONG != value))
				{
					this.OnQU_WRONGChanging(value);
					this.SendPropertyChanging();
					this._QU_WRONG = value;
					this.SendPropertyChanged("QU_WRONG");
					this.OnQU_WRONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QU_NOTSOLVED", DbType="Int")]
		public System.Nullable<int> QU_NOTSOLVED
		{
			get
			{
				return this._QU_NOTSOLVED;
			}
			set
			{
				if ((this._QU_NOTSOLVED != value))
				{
					this.OnQU_NOTSOLVEDChanging(value);
					this.SendPropertyChanging();
					this._QU_NOTSOLVED = value;
					this.SendPropertyChanged("QU_NOTSOLVED");
					this.OnQU_NOTSOLVEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QU_SCORE", DbType="Int")]
		public System.Nullable<int> QU_SCORE
		{
			get
			{
				return this._QU_SCORE;
			}
			set
			{
				if ((this._QU_SCORE != value))
				{
					this.OnQU_SCOREChanging(value);
					this.SendPropertyChanging();
					this._QU_SCORE = value;
					this.SendPropertyChanged("QU_SCORE");
					this.OnQU_SCOREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QU_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> QU_DATE
		{
			get
			{
				return this._QU_DATE;
			}
			set
			{
				if ((this._QU_DATE != value))
				{
					this.OnQU_DATEChanging(value);
					this.SendPropertyChanging();
					this._QU_DATE = value;
					this.SendPropertyChanged("QU_DATE");
					this.OnQU_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUIZ_QUIZ_USER", Storage="_QUIZ", ThisKey="QZ_ID", OtherKey="QZ_ID", IsForeignKey=true)]
		public QUIZ QUIZ
		{
			get
			{
				return this._QUIZ.Entity;
			}
			set
			{
				QUIZ previousValue = this._QUIZ.Entity;
				if (((previousValue != value) 
							|| (this._QUIZ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUIZ.Entity = null;
						previousValue.QUIZ_USERs.Remove(this);
					}
					this._QUIZ.Entity = value;
					if ((value != null))
					{
						value.QUIZ_USERs.Add(this);
						this._QZ_ID = value.QZ_ID;
					}
					else
					{
						this._QZ_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("QUIZ");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_QUIZ_USER", Storage="_USER", ThisKey="U_ID", OtherKey="U_ID", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.QUIZ_USERs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.QUIZ_USERs.Add(this);
						this._U_ID = value.U_ID;
					}
					else
					{
						this._U_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[USER]")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _U_ID;
		
		private string _U_FNAME;
		
		private string _U_LNAME;
		
		private string _U_UN;
		
		private string _U_PASS;
		
		private EntitySet<QUIZ_USER> _QUIZ_USERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnU_IDChanging(int value);
    partial void OnU_IDChanged();
    partial void OnU_FNAMEChanging(string value);
    partial void OnU_FNAMEChanged();
    partial void OnU_LNAMEChanging(string value);
    partial void OnU_LNAMEChanged();
    partial void OnU_UNChanging(string value);
    partial void OnU_UNChanged();
    partial void OnU_PASSChanging(string value);
    partial void OnU_PASSChanged();
    #endregion
		
		public USER()
		{
			this._QUIZ_USERs = new EntitySet<QUIZ_USER>(new Action<QUIZ_USER>(this.attach_QUIZ_USERs), new Action<QUIZ_USER>(this.detach_QUIZ_USERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int U_ID
		{
			get
			{
				return this._U_ID;
			}
			set
			{
				if ((this._U_ID != value))
				{
					this.OnU_IDChanging(value);
					this.SendPropertyChanging();
					this._U_ID = value;
					this.SendPropertyChanged("U_ID");
					this.OnU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_FNAME", DbType="NVarChar(50)")]
		public string U_FNAME
		{
			get
			{
				return this._U_FNAME;
			}
			set
			{
				if ((this._U_FNAME != value))
				{
					this.OnU_FNAMEChanging(value);
					this.SendPropertyChanging();
					this._U_FNAME = value;
					this.SendPropertyChanged("U_FNAME");
					this.OnU_FNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_LNAME", DbType="NVarChar(50)")]
		public string U_LNAME
		{
			get
			{
				return this._U_LNAME;
			}
			set
			{
				if ((this._U_LNAME != value))
				{
					this.OnU_LNAMEChanging(value);
					this.SendPropertyChanging();
					this._U_LNAME = value;
					this.SendPropertyChanged("U_LNAME");
					this.OnU_LNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_UN", DbType="NVarChar(50)")]
		public string U_UN
		{
			get
			{
				return this._U_UN;
			}
			set
			{
				if ((this._U_UN != value))
				{
					this.OnU_UNChanging(value);
					this.SendPropertyChanging();
					this._U_UN = value;
					this.SendPropertyChanged("U_UN");
					this.OnU_UNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_PASS", DbType="NVarChar(50)")]
		public string U_PASS
		{
			get
			{
				return this._U_PASS;
			}
			set
			{
				if ((this._U_PASS != value))
				{
					this.OnU_PASSChanging(value);
					this.SendPropertyChanging();
					this._U_PASS = value;
					this.SendPropertyChanged("U_PASS");
					this.OnU_PASSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_QUIZ_USER", Storage="_QUIZ_USERs", ThisKey="U_ID", OtherKey="U_ID")]
		public EntitySet<QUIZ_USER> QUIZ_USERs
		{
			get
			{
				return this._QUIZ_USERs;
			}
			set
			{
				this._QUIZ_USERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QUIZ_USERs(QUIZ_USER entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_QUIZ_USERs(QUIZ_USER entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
	}
}
#pragma warning restore 1591
